@using hub.Client.Services.Loading
@inherits LayoutComponentBase
@inject ILoadingService LoadingService
@implements IDisposable

@{
	var anonymousOptions = new List<(string, string)> {("Login", "/login")};
	var authedOptions = new List<(string, string)> { ("Scale", "/scale"), ("Finance", "/finance")};
}

<div class="main">
	<AuthorizeView>
		<Authorized>
			<Navbar Items="@authedOptions"></Navbar>
		</Authorized>
		<NotAuthorized>
			<Navbar Items="@anonymousOptions"></Navbar>
		</NotAuthorized>
	</AuthorizeView>
	@if (LoadingService.IsLoading)
	{
		<div class="centering">
			<div class="loading">
				<div class="spinner-border text-primary" role="status">
					<span class="sr-only"></span>
				</div>
				<p>Loading...</p>
			</div>
		</div>
	}
	<div class="container">
		@Body
	</div>
</div>

@code
{
	protected override void OnInitialized()
	{
		LoadingService.StateChanged += StateHasChanged;
		base.OnInitialized();
	}

	public void Dispose()
	{
		LoadingService.StateChanged -= StateHasChanged;
	}
}
